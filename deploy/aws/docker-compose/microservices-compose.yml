version: '3.8'

services:
  user-service:
    build:
      context: ../../../user-service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    env_file:
      - ../env/.env.microservices.generated
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8003/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    build:
      context: ../../../product-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${MESSAGING_HOST}:29092
      - KAFKA_CLIENT_ID=product-service
    env_file:
      - ../env/.env.microservices.generated
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    build:
      context: ../../../order-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    env_file:
      - ../env/.env.microservices.generated
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - user-service
      - product-service

  inventory-service:
    build:
      context: ../../../inventory-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${MESSAGING_HOST}:29092
      - KAFKA_CLIENT_ID=inventory-service
      - KAFKA_CONSUMER_GROUP=inventory-consumer-group
    env_file:
      - ../env/.env.microservices.generated
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - product-service

  notification-service:
    build:
      context: ../../../notification-service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    env_file:
      - ../env/.env.microservices.generated
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8004/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - user-service
      - inventory-service